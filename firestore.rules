rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Helper function to check if user is authenticated
    function isAuthenticated() {
      return request.auth != null;
    }
    
    // Helper function to get user data safely
    function getUserData() {
      return exists(/databases/$(database)/documents/users/$(request.auth.uid)) ? 
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data : null;
    }
    
    // Helper function to check user role safely
    function hasRole(role) {
      let userData = getUserData();
      return isAuthenticated() && userData != null && userData.role == role;
    }
    
    // Helper function to check if user has admin privileges
    function isAdmin() {
      let userData = getUserData();
      return isAuthenticated() && userData != null && userData.role in ['admin', 'super_admin'];
    }
    
    // Helper function to check if user is super admin
    function isSuperAdmin() {
      return hasRole('super_admin');
    }
    
    // Helper function to check if user belongs to clinic
    function belongsToClinic(clinicId) {
      let userData = getUserData();
      return isAuthenticated() && userData != null && 
        (userData.clinicId == clinicId || userData.role == 'super_admin');
    }
    
    // Helper function to check if system is being initialized
    function isSystemInitialization() {
      return !exists(/databases/$(database)/documents/system/initialized);
    }
    
    // System collections (initialization and settings)
    match /system/{document} {
      allow read: if true; // Allow reading system status
      allow write: if isSystemInitialization() || isSuperAdmin();
    }
    
    // Categories collection
    match /categories/{categoryId} {
      allow read: if true; // Allow reading categories for initialization
      allow write: if isSystemInitialization() || isSuperAdmin();
    }
    
    // Users collection - more permissive during initialization
    match /users/{userId} {
      allow read: if isAuthenticated() && 
        (request.auth.uid == userId || isAdmin() || isSystemInitialization());
      allow write: if isAuthenticated() && 
        (request.auth.uid == userId || isAdmin() || isSystemInitialization());
      allow create: if isSystemInitialization() || isAdmin() || request.auth.uid == userId;
      allow delete: if isSuperAdmin();
    }
    
    // Clinics collection - allow creation during initialization
    match /clinics/{clinicId} {
      allow read: if isAuthenticated() && 
        (belongsToClinic(clinicId) || isSuperAdmin() || isSystemInitialization());
      allow write: if isSystemInitialization() || 
        (isAdmin() && (belongsToClinic(clinicId) || isSuperAdmin()));
      allow create: if isSystemInitialization() || isSuperAdmin();
      allow delete: if isSuperAdmin();
    }
    
    // Scripts collection - more permissive for authenticated users
    match /scripts/{scriptId} {
      allow read: if isAuthenticated();
      allow write: if isAuthenticated() && isAdmin();
      allow create: if isAuthenticated() && isAdmin();
      allow delete: if isAuthenticated() && isAdmin();
    }
    
    // Analytics and usage tracking
    match /analytics/{document} {
      allow read: if isAdmin();
      allow write: if isAuthenticated();
    }
    
    // Audit logs
    match /audit_logs/{logId} {
      allow read: if isSuperAdmin();
      allow write: if isAuthenticated(); // Allow logging
    }
    
    // User sessions and activity
    match /user_sessions/{sessionId} {
      allow read, write: if isAuthenticated();
    }
    
    // Notifications
    match /notifications/{notificationId} {
      allow read: if isAuthenticated();
      allow write: if isAdmin();
    }
    
    // Templates (global script templates)
    match /templates/{templateId} {
      allow read: if isAuthenticated();
      allow write: if isSuperAdmin();
    }
    
    // Feedback and support
    match /feedback/{feedbackId} {
      allow read: if isAuthenticated();
      allow create: if isAuthenticated();
      allow update: if isAuthenticated();
    }
    
    // Setup collection - for initial system setup
    match /setup/{document} {
      allow read, write: if true; // Allow setup operations
    }
  }
}

